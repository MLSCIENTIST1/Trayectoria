"""Migraciones reiniciadas

Revision ID: 5fd920733666
Revises: 
Create Date: 2025-03-29 11:27:19.544344

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5fd920733666'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('colombia',
    sa.Column('ciudad_id', sa.Integer(), nullable=False),
    sa.Column('ciudad_nombre', sa.String(length=100), nullable=True),
    sa.Column('servicios_insatisfechos', sa.Integer(), nullable=True),
    sa.Column('servicio_mayor_valor', sa.Text(), nullable=True),
    sa.Column('servicio_menor_valor', sa.Text(), nullable=True),
    sa.Column('precio_promedio_servicios', sa.Float(), nullable=True),
    sa.Column('servicio_mas_ofrecido', sa.Text(), nullable=True),
    sa.Column('servicio_menos_ofrecido', sa.Text(), nullable=True),
    sa.Column('porcentaje_ni√±ez', sa.Float(), nullable=True),
    sa.Column('porcentaje_adolescencia_temprana', sa.Float(), nullable=True),
    sa.Column('porcentaje_adolescencia_tardia', sa.Float(), nullable=True),
    sa.Column('porcentaje_adultez_joven', sa.Float(), nullable=True),
    sa.Column('porcentaje_adultez_media', sa.Float(), nullable=True),
    sa.Column('porcentaje_pre_jubilacion', sa.Float(), nullable=True),
    sa.Column('porcentaje_vejez_temprana', sa.Float(), nullable=True),
    sa.Column('porcentaje_vejez_avanzada', sa.Float(), nullable=True),
    sa.Column('usuarios_1_servicio', sa.Integer(), nullable=True),
    sa.Column('usuarios_2_servicios', sa.Integer(), nullable=True),
    sa.Column('usuarios_3_servicios', sa.Integer(), nullable=True),
    sa.Column('usuarios_4_servicios', sa.Integer(), nullable=True),
    sa.Column('usuarios_5_servicios', sa.Integer(), nullable=True),
    sa.Column('usuarios_foto_perfil', sa.Integer(), nullable=True),
    sa.Column('usuarios_solicitudes_baja', sa.Integer(), nullable=True),
    sa.Column('feedbacks_plataforma', sa.Integer(), nullable=True),
    sa.Column('promedio_ingresos_diarios', sa.Float(), nullable=True),
    sa.Column('servicio_mas_contratado', sa.Text(), nullable=True),
    sa.Column('servicio_menos_contratado', sa.Text(), nullable=True),
    sa.Column('precio_minimo_promedio_ofertado', sa.Float(), nullable=True),
    sa.Column('precio_maximo_promedio_ofertado', sa.Float(), nullable=True),
    sa.Column('precio_minimo_promedio_contratado', sa.Float(), nullable=True),
    sa.Column('precio_maximo_promedio_contratado', sa.Float(), nullable=True),
    sa.Column('tasa_crecimiento_usuarios', sa.Float(), nullable=True),
    sa.Column('tasa_retencion_usuarios', sa.Float(), nullable=True),
    sa.Column('tasa_churn_usuarios', sa.Float(), nullable=True),
    sa.Column('servicios_emergentes', sa.Text(), nullable=True),
    sa.Column('ratio_contratados_vs_ofrecidos', sa.Float(), nullable=True),
    sa.Column('porcentaje_freelancers', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('ciudad_id')
    )
    op.create_table('service_qualifiers',
    sa.Column('id_qualifier', sa.Integer(), nullable=False),
    sa.Column('nombre_calificativo', sa.String(length=50), nullable=False),
    sa.Column('descripcion', sa.String(length=255), nullable=True),
    sa.Column('calificativo_mas_usado', sa.Boolean(), nullable=True),
    sa.Column('calificativo_menos_usado', sa.Boolean(), nullable=True),
    sa.Column('peso_calificativo', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id_qualifier'),
    sa.UniqueConstraint('nombre_calificativo')
    )
    op.create_table('usuario',
    sa.Column('id_usuario', sa.Integer(), nullable=False),
    sa.Column('ciudad_id', sa.Integer(), nullable=True),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('apellidos', sa.String(), nullable=False),
    sa.Column('correo', sa.String(), nullable=False),
    sa.Column('contrasenia', sa.String(), nullable=False),
    sa.Column('profesion', sa.String(), nullable=False),
    sa.Column('cedula', sa.BigInteger(), nullable=False),
    sa.Column('celular', sa.BigInteger(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('pais_id', sa.Integer(), nullable=True),
    sa.Column('validate', sa.Boolean(), nullable=True),
    sa.Column('black_list', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['ciudad_id'], ['colombia.ciudad_id'], ),
    sa.PrimaryKeyConstraint('id_usuario'),
    sa.UniqueConstraint('cedula'),
    sa.UniqueConstraint('correo')
    )
    op.create_table('feedback',
    sa.Column('id_feedback', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.Column('rol_usuario', sa.String(length=50), nullable=True),
    sa.Column('tipo_feedback', sa.String(length=50), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=False),
    sa.Column('fecha_envio', sa.DateTime(), nullable=False),
    sa.Column('estado', sa.String(length=50), nullable=False),
    sa.Column('prioridad', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id_usuario'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_feedback')
    )
    op.create_table('monetization_management',
    sa.Column('id_monetizacion', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('rol_usuario', sa.String(length=50), nullable=True),
    sa.Column('plan', sa.String(length=50), nullable=False),
    sa.Column('monto_pago', sa.Float(), nullable=False),
    sa.Column('moneda', sa.String(length=10), nullable=False),
    sa.Column('metodo_pago', sa.String(length=50), nullable=True),
    sa.Column('fecha_pago', sa.DateTime(), nullable=False),
    sa.Column('codigo_qr', sa.String(length=255), nullable=True),
    sa.Column('estado_qr', sa.String(length=50), nullable=True),
    sa.Column('fecha_transaccion_qr', sa.DateTime(), nullable=True),
    sa.Column('funcionalidades_habilitadas', sa.Text(), nullable=True),
    sa.Column('duracion_plan', sa.Integer(), nullable=True),
    sa.Column('fecha_expiracion', sa.DateTime(), nullable=True),
    sa.Column('estado_pago', sa.String(length=50), nullable=False),
    sa.Column('notificacion_pago', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id_usuario'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_monetizacion')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('is_accepted', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('response', sa.String(length=255), nullable=True),
    sa.Column('request_message_details', sa.String(length=255), nullable=True),
    sa.Column('questions', sa.String(length=255), nullable=True),
    sa.Column('message', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['sender_id'], ['usuario.id_usuario'], ),
    sa.ForeignKeyConstraint(['user_id'], ['usuario.id_usuario'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('servicio',
    sa.Column('id_servicio', sa.Integer(), nullable=False),
    sa.Column('nombre_servicio', sa.String(), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('categoria', sa.Text(), nullable=True),
    sa.Column('fecha_solicitud', sa.Date(), nullable=True),
    sa.Column('fecha_aceptacion', sa.Date(), nullable=True),
    sa.Column('fecha_inicio', sa.Date(), nullable=True),
    sa.Column('fecha_fin', sa.Date(), nullable=True),
    sa.Column('nombre_contratante', sa.String(), nullable=True),
    sa.Column('aditional_service', sa.String(length=234), nullable=True),
    sa.Column('service_active', sa.Boolean(), nullable=True),
    sa.Column('precio', sa.Float(), nullable=True),
    sa.Column('etapas_calificacion', sa.Integer(), nullable=True),
    sa.Column('viajar_dentro_pais', sa.Boolean(), nullable=True),
    sa.Column('viajar_fuera_pais', sa.Boolean(), nullable=True),
    sa.Column('domicilios', sa.Boolean(), nullable=True),
    sa.Column('incluye_asesoria', sa.Boolean(), nullable=True),
    sa.Column('requiere_presencia_cliente', sa.Boolean(), nullable=True),
    sa.Column('experiencia_previa', sa.Boolean(), nullable=True),
    sa.Column('facturacion_formal', sa.Boolean(), nullable=True),
    sa.Column('modelos_negocio', sa.String(length=200), nullable=True),
    sa.Column('id_usuario', sa.Integer(), nullable=False),
    sa.Column('id_contratante', sa.Integer(), nullable=True),
    sa.Column('id_contratado', sa.Integer(), nullable=True),
    sa.Column('ciudad_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ciudad_id'], ['colombia.ciudad_id'], ),
    sa.ForeignKeyConstraint(['id_contratado'], ['usuario.id_usuario'], ),
    sa.ForeignKeyConstraint(['id_contratante'], ['usuario.id_usuario'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id_usuario'], ),
    sa.PrimaryKeyConstraint('id_servicio')
    )
    op.create_table('etapas',
    sa.Column('id_etapa', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.Column('servicio_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['servicio_id'], ['servicio.id_servicio'], ),
    sa.PrimaryKeyConstraint('id_etapa')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['notification_id'], ['notification.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['usuario.id_usuario'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['usuario.id_usuario'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_overall_scores',
    sa.Column('id_score', sa.Integer(), nullable=False),
    sa.Column('servicio_id', sa.Integer(), nullable=False),
    sa.Column('puntaje_global_servicio', sa.Float(), nullable=False),
    sa.Column('puntaje_global_usuario', sa.Float(), nullable=True),
    sa.Column('puntaje_global_contratante', sa.Float(), nullable=True),
    sa.Column('puntaje_global_contratado', sa.Float(), nullable=True),
    sa.Column('promedio_duracion_horas', sa.Float(), nullable=True),
    sa.Column('promedio_duracion_dias', sa.Float(), nullable=True),
    sa.Column('promedio_duracion_meses', sa.Float(), nullable=True),
    sa.Column('promedio_duracion_total', sa.Float(), nullable=True),
    sa.Column('calificativo_mas_recibido_como_contratante', sa.String(length=50), nullable=True),
    sa.Column('calificativo_mas_recibido_como_contratado', sa.String(length=50), nullable=True),
    sa.Column('veces_volverian_a_ser_contratados', sa.Integer(), nullable=True),
    sa.Column('veces_volverian_a_ser_contratantes', sa.Integer(), nullable=True),
    sa.Column('total_calificaciones_recibidas', sa.Integer(), nullable=True),
    sa.Column('total_calificaciones_hechas', sa.Integer(), nullable=True),
    sa.Column('cantidad_veces_qr', sa.Integer(), nullable=True),
    sa.Column('cantidad_veces_manual', sa.Integer(), nullable=True),
    sa.Column('coincidencias_calificacion_1_contratante', sa.Integer(), nullable=True),
    sa.Column('coincidencias_calificacion_2_contratante', sa.Integer(), nullable=True),
    sa.Column('coincidencias_calificacion_3_contratante', sa.Integer(), nullable=True),
    sa.Column('porcentaje_coincidencia_contratante', sa.Float(), nullable=True),
    sa.Column('peso_calificacion_contratante', sa.Float(), nullable=True),
    sa.Column('coincidencias_calificacion_1_contratado', sa.Integer(), nullable=True),
    sa.Column('coincidencias_calificacion_2_contratado', sa.Integer(), nullable=True),
    sa.Column('coincidencias_calificacion_3_contratado', sa.Integer(), nullable=True),
    sa.Column('porcentaje_coincidencia_contratado', sa.Float(), nullable=True),
    sa.Column('peso_calificacion_contratado', sa.Float(), nullable=True),
    sa.Column('suma_calificaciones_positivas', sa.Integer(), nullable=True),
    sa.Column('suma_calificaciones_negativas', sa.Integer(), nullable=True),
    sa.Column('peso_calificacion_verificado', sa.Float(), nullable=True),
    sa.Column('peso_calificacion_no_verificado', sa.Float(), nullable=True),
    sa.Column('numero_calificaciones', sa.Integer(), nullable=False),
    sa.Column('fecha_ultima_actualizacion', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['servicio_id'], ['servicio.id_servicio'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_score')
    )
    op.create_table('usuario_servicio',
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('servicio_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['servicio_id'], ['servicio.id_servicio'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id_usuario'], ),
    sa.PrimaryKeyConstraint('usuario_id', 'servicio_id')
    )
    op.create_table('audios',
    sa.Column('id_audio', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=200), nullable=False),
    sa.Column('etapa_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['etapa_id'], ['etapas.id_etapa'], ),
    sa.PrimaryKeyConstraint('id_audio')
    )
    op.create_table('fotos',
    sa.Column('id_foto', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=200), nullable=False),
    sa.Column('etapa_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['etapa_id'], ['etapas.id_etapa'], ),
    sa.PrimaryKeyConstraint('id_foto')
    )
    op.create_table('service_ratings',
    sa.Column('id_rating', sa.Integer(), nullable=False),
    sa.Column('servicio_id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('calificacion_recived_contratante1', sa.Integer(), nullable=True),
    sa.Column('razon_contratante1', sa.String(length=255), nullable=True),
    sa.Column('calificacion_recived_contratante2', sa.Integer(), nullable=True),
    sa.Column('razon_contratante2', sa.String(length=255), nullable=True),
    sa.Column('calificacion_recived_contratante3', sa.Integer(), nullable=True),
    sa.Column('razon_contratante3', sa.String(length=255), nullable=True),
    sa.Column('id_calificativo_como_contratante', sa.Integer(), nullable=True),
    sa.Column('id_calificativo_como_contratado', sa.Integer(), nullable=True),
    sa.Column('volveria_a_contratar', sa.Boolean(), nullable=True),
    sa.Column('volveria_a_ser_contratado', sa.Boolean(), nullable=True),
    sa.Column('calificacion_recived_contratado1', sa.Integer(), nullable=True),
    sa.Column('razon_contratado1', sa.String(length=255), nullable=True),
    sa.Column('calificacion_recived_contratado2', sa.Integer(), nullable=True),
    sa.Column('razon_contratado2', sa.String(length=255), nullable=True),
    sa.Column('calificacion_recived_contratado3', sa.Integer(), nullable=True),
    sa.Column('razon_contratado3', sa.String(length=255), nullable=True),
    sa.Column('qr_o_manual', sa.String(length=10), nullable=True),
    sa.Column('id_qr_usado', sa.String(length=50), nullable=True),
    sa.Column('horas', sa.Integer(), nullable=True),
    sa.Column('dias', sa.Integer(), nullable=True),
    sa.Column('meses', sa.Integer(), nullable=True),
    sa.Column('duracion_total', sa.String(length=50), nullable=True),
    sa.Column('puntaje_por_labor', sa.Integer(), nullable=True),
    sa.Column('resultado_contratante', sa.Float(), nullable=True),
    sa.Column('resultado_contratado', sa.Float(), nullable=True),
    sa.Column('comentary_hired_employer', sa.String(), nullable=True),
    sa.Column('comentary_employer_hired', sa.String(), nullable=True),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=False),
    sa.Column('fecha_modificacion', sa.DateTime(), nullable=True),
    sa.Column('overall_score_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['overall_score_id'], ['service_overall_scores.id_score'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['servicio_id'], ['servicio.id_servicio'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id_usuario'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_rating')
    )
    op.create_table('videos',
    sa.Column('id_video', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=200), nullable=False),
    sa.Column('etapa_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['etapa_id'], ['etapas.id_etapa'], ),
    sa.PrimaryKeyConstraint('id_video')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('videos')
    op.drop_table('service_ratings')
    op.drop_table('fotos')
    op.drop_table('audios')
    op.drop_table('usuario_servicio')
    op.drop_table('service_overall_scores')
    op.drop_table('message')
    op.drop_table('etapas')
    op.drop_table('servicio')
    op.drop_table('notification')
    op.drop_table('monetization_management')
    op.drop_table('feedback')
    op.drop_table('usuario')
    op.drop_table('service_qualifiers')
    op.drop_table('colombia')
    # ### end Alembic commands ###
